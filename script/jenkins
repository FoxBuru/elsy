#!/usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

JENKINS_URL=https://terrapin-jenkins0.eng.lancope.local
JOB_NAME=project-lifecycle

declare user
while getopts ":u:" opt; do
  case $opt in
    u)
      user=$OPTARG
      ;;
  esac
done
if [ -z "$user" ] ; then
  echo "usage: $0 -u <jenkins-username> [ fetch | deploy | trigger ]" &>2
  echo "  fetch: downloads latest job configuration from the jenkins server and saves it locally as $DIR/../jenkins-job.xml" &>2
  echo "  deploy: reconfigures job on jenkins server with $DIR/../jenkins-job.xml" &>2
  echo "  trigger: triggers a build of whatever commit is at your local HEAD. note: The commit must be available at the central repo" &>2
  exit 1
fi

shift $((OPTIND - 1))

case $1 in
  "fetch")
    curl -k --fail --user $user $JENKINS_URL/job/$JOB_NAME/config.xml -o $DIR/../jenkins-job.xml
    ;;
  "deploy")
    response=`curl -k --location --silent --write-out '%{http_code}' --output /dev/null $JENKINS_URL/job/$JOB_NAME/`
    case $response in
      "200")
        echo "updating jenkins job"
        set -e
        curl -k --fail --user $user $JENKINS_URL/job/$JOB_NAME/config.xml --data-binary "@${DIR}/../jenkins-job.xml"
        echo "view job at $JENKINS_URL/job/$JOB_NAME/configure"
        ;;
      "404")
        echo "creating jenkins job"
        set -e
        curl -k --fail --user $user $JENKINS_URL/createItem?name=$JOB_NAME --data-binary "@${DIR}/../jenkins-job.xml" -H "Content-Type: text/xml"
        echo "view job at $JENKINS_URL/job/$JOB_NAME/configure"
        ;;
      *)
        echo "unknown reponse $response"
        exit 1
        ;;
    esac
    ;;
  "trigger")
    remote=$(git config --get remote.origin.url)
    commit=$(git rev-parse HEAD)
    curl -k --fail --user $user "$JENKINS_URL/git/notifyCommit" -d "url=${remote}" -d "sha1=${commit}"
    ;;
  *)
    echo "usage: $0 -u <jenkins-username> [ fetch | deploy ]"
    exit 1
    ;;
esac
